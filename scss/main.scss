@import "compass";
@import "compass/reset";

@import "_typography";
@import "_colors";
@import "_responsive";
@import "bootstrap.min.css";

* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-user-select: none;
}

html {
  width: 100%;
  height: 100%;
  border: 0;
  margin: 0;

  body {
    width: 100%;
    height: 100%;
    border: 0;
    margin: 0;

    @each $color-key, $color-variants in $app-colors {
      $c-base-color: map-get($color-variants, "base");
      $c-font-color: map-get($color-variants, "font");
      $c-border-color: map-get($color-variants, "border");

      .theBox {
        &.#{$color-key} {
          width: 100%;
          height: 100%;

          background-color: #FAFFFE;

          display: flex;
          flex-direction: column;
          align-items: center;

          .smallBox {
            width: 100px;
            height: 100px;
            position: absolute;
            top: 20px;
            left: 20px;

            &:after {
              content: 'base';
              position: absolute;
              top: 50%;
              left: 50%;
              transform: translate(-50%,-50%);
            }
            @include respond-to(handhelds) { background-color: blue; &:after {content:'small'}}
            @include respond-to(medium-screens) { background-color: yellow; &:after {content:'medium'}}
            @include respond-to(wide-screens) { background-color: red; &:after {content:'big'}}
          }

          .headerBox {
            width:500px;
            margin: 10px;
            background-color: #fff;

            display: flex;

            transition: all 0.5s ease;

            @include respond-to(handhelds) { width: 90vw;flex-direction: column;}
            @include respond-to(medium-screens) { width: 815px;flex-direction: row;}
            @include respond-to(wide-screens) { width: 1015px;flex-direction: row;}

            .nameBox {
              border: 2px solid $c-border-color;

              transition: all 0.5s ease;

              @include respond-to(handhelds) { width: 90vw;height: 100px;}
              @include respond-to(medium-screens) { width: 320px;height: 100px;}
              @include respond-to(wide-screens) { width: 320px;height: 100px;}

              .name {
                width: 100%;
                height: 70%;
                border-bottom: 2px solid $c-border-color
              }
              .title {
                width: 100%;
                height: 30%;
              }
            }
            .descriptionBox {
              border-top: 2px solid $c-border-color;
              border-right: 2px solid $c-border-color;
              border-bottom: 2px solid $c-border-color;

              transition: all 0.5s ease;

              @include respond-to(handhelds) { width: 90vw;height: 100px; border-top: 0px; border-left: 2px solid $c-border-color;}
              @include respond-to(medium-screens) { width: 495px;height: 100px;}
              @include respond-to(wide-screens) { width: 695px;height: 100px;}
            }
          }

          .contentBox {
            //width: 500px;
            //height: 400px;
            //background: blue;
            //margin: 10px;

            display: flex;

            transition: all 0.5s ease;

            @include respond-to(handhelds) {width: 90vw; flex-direction: column;}
            @include respond-to(medium-screens) {flex-direction: row;}
            @include respond-to(wide-screens) {flex-direction: row;}

            .infoBox {
              //height: 100%;
              //background: yellow;
              margin-right: 15px;

              transition: all 0.5s ease;

              @include respond-to(handhelds) {width: 100%;}
              @include respond-to(medium-screens) {width: 320px;}
              @include respond-to(wide-screens) {width: 320px;}

              .infoItem {
                position: relative;
                width: 100%;
                overflow: hidden;
                margin-bottom: 10px;
                background-color: #fff;

                transition: all 0.5s linear;

                .infoItemHeading {
                  position: relative;
                  height: 30px;
                  cursor: pointer;
                  border: 2px solid $c-border-color;

                  .infoItemTitle {
                    font-family: 'source code pro';
                    font-weight: 700;
                    font-size: 18px;
                    position: absolute;
                    top: 1px;
                    left: 12px;
                    color: $c-font-color;
                  }
                  .infoItemHandle {
                    position: absolute;
                    width: 16px;
                    height: 2px;
                    background-color: $c-font-color;
                    top: 50%;
                    right: 12px;
                    transform: translateY(-50%);

                    &:after {
                      content:'';
                      width: 2px;
                      height: 16px;
                      position: absolute;
                      top: -7px;
                      left: 7px;
                      background: $c-font-color;
                      transform: rotate(0);

                      transition: all 0.1s ease-in-out;
                    }
                  }
                  &.active {.infoItemHandle:after {transform: rotate(90deg);}}
                }
                .infoItemBody {
                  height: 0px;
                  overflow: hidden;
                  opacity: 0;
                  visibility: hidden;
                  transition: opacity 0.5s linear;
                  border-left: 2px solid $c-border-color;
                  border-right: 2px solid $c-border-color;

                }

                .infoItemHeading.active ~ .infoItemBody {
                  height: auto;
                  opacity: 1;
                  visibility: visible;
                  border-bottom: 2px solid $c-border-color;
                }
              }
            }
            .workBox {
              height: 100%;
              //background: green;

              transition: all 0.5s ease;

              @include respond-to(handhelds) {width: 100%;}
              @include respond-to(medium-screens) {width: 480px;}
              @include respond-to(wide-screens) {width: 680px;}

              @each $color-key, $color-variants in $app-colors {
                $c-base-color: map-get($color-variants, "base");
                $c-font-color: map-get($color-variants, "font");
                $c-border-color: map-get($color-variants, "border");

              .workItem {
                &.#{$color-key} {
                  position: relative;
                  width: 100%;
                  overflow: hidden;
                  margin-bottom: 10px;
                  background-color: #fff;
                  font-family: 'source code pro';
                  color: saturate(shade($c-base-color, 10%),10%);

                  transition: all 0.5s linear;

                  .workItemHeading {
                    position: relative;
                    height: 30px;
                    cursor: pointer;
                    border: 2px solid $c-base-color;
                    overflow: hidden;

                    display: flex;

                    .date {
                      height: 100%;
                      border-right: 2px solid $c-base-color;
                      font-weight: 700;
                      padding: 4px 10px;
                      font-size: 13px;
                      background-color: lighten($c-base-color, 5%);
                    }

                    .title {
                      height: 100%;
                      border-right: 2px solid $c-base-color;
                      font-weight: 700;
                      padding: 0px 10px;
                      font-size: 18px;
                      background-color: lighten($c-base-color, 10%);
                      flex-shrink: 0;
                    }
                    .miniDescription {
                      height: 100%;
                      //width: 100%;
                      font-weight: 400;
                      padding: 7px 10px;
                      font-size: 11px;
                      white-space: nowrap;
                      background-color: lighten($c-base-color, 20%);
                      flex: auto;

                      &:after {
                        content: '';
                        height: 100%;
                        position: absolute;
                        right: 0;
                        top:0;
                        width: 20%;
                        max-width: 40px;
                        transform: translateX(-40px);
                        background: -moz-linear-gradient(left,  transparentize(lighten($c-base-color, 20%),1) 0%, lighten($c-base-color, 20%) 100%); /* FF3.6-15 */
                        background: -webkit-linear-gradient(left,  transparentize(lighten($c-base-color, 20%),1) 0%, lighten($c-base-color, 20%) 100%); /* Chrome10-25,Safari5.1-6 */
                        background: linear-gradient(to right,  transparentize(lighten($c-base-color, 20%),1) 0%, lighten($c-base-color, 20%) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
                        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#ffffff',GradientType=1 ); /* IE6-9 */

                      }
                    }
                    .workItemHandleBox {
                      position: absolute;
                      right: 0px;
                      height: 100%;
                      width: 40px;
                      border-left: 2px solid $c-base-color;
                      background-color: lighten(saturate(adjust-hue($c-base-color, 5.8824), 0.0000), 14.1176);

                      .workItemHandle {
                        position: absolute;
                        width: 16px;
                        height: 2px;
                        background-color: $c-base-color;
                        top: 50%;
                        right: 12px;
                        transform: translateY(-50%);
                      }

                      &:after {
                        content:'';
                        width: 2px;
                        height: 16px;
                        position: absolute;
                        top: 5px;
                        left: 17px;
                        background: $c-base-color;
                        transform: rotate(0);

                        transition: all 0.1s ease-in-out;
                      }
                    }
                    &.active {.workItemHandleBox:after {transform: rotate(90deg);}}

                  }
                  .workItemBody {
                    height: 0px;
                    overflow: hidden;
                    opacity: 0;
                    visibility: hidden;
                    transition: opacity 0.5s linear;
                    border-bottom: 2px solid $c-base-color;
                    border-left: 2px solid $c-base-color;
                    border-right: 2px solid $c-base-color;
                    background-color: lighten($c-base-color, 35%);
                  }

                  .workItemHeading.active ~ .workItemBody {
                    height: auto;
                    opacity: 1;
                    visibility: visible;
                  }
                }
              }
              }
            }
          }
        }
      }

    }
  }
}
